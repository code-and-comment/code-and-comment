!function(){"use strict";let e=null;function t(e){const t=e.target.result.createObjectStore("CodeAndComment",{keyPath:"id",autoIncrement:!0});["git","repository","path"].forEach(e=>{t.createIndex(e,[e,"updated_at"],{unique:!1,multiEntry:!1})}),t.createIndex("updated_at",["updated_at"],{unique:!1,multiEntry:!1})}function n(){if(e)return e;return new Promise((n,r)=>{const o=indexedDB.open("CodeAndComment",1);o.addEventListener("upgradeneeded",t),o.addEventListener("success",t=>{e=t.target.result,n(e)}),o.addEventListener("error",()=>{alert("indexedDB open error"),r(null)})})}self.addEventListener("message",async function(){const e=await n(),t=await function(e){return e.transaction(["CodeAndComment"],"readwrite").objectStore("CodeAndComment")}(e),r=new Promise((e,n)=>{const r=t.openCursor(),o=new Set;r.addEventListener("success",t=>{const n=t.target.result;n?(o.add(n.value.repository),n.continue()):e(Array.from(o))}),r.addEventListener("error",()=>{n(null)})}),o=await r;self.postMessage(o)},!1)}();